@using WebUI.Models
@model IList<PersonViewModel>

@{
    ViewBag.Title = "Grid";
}

<h2>Grid</h2>


@using (Html.BeginForm("Grid", "Person"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Persons</h4>
        <table class="table-striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model[0].FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Phones.FirstOrDefault().Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Phones.FirstOrDefault().Type)
                </th>
            </tr>

            @for (var i = 0; i < Model?.Count(); i++)
            {
                @Html.HiddenFor(model => Model[i].Id)

                <tr>
                    <td class="input-group-sm ">
                        @Html.TextBoxFor(modelItem => Model[i].FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model[i].FirstName, "", new { @class = "text-danger" })
                    </td>
                    <td class="input-group-sm">
                        @Html.TextBoxFor(modelItem => Model[i].LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model[i].LastName, "", new { @class = "text-danger" })
                    </td>
                    <td class="input-group-sm" >
                        @Html.TextBoxFor(modelItem => Model[i].Age, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model[i].Age, "", new { @class = "text-danger" })
                    </td>
                    @for (var j = 0; j < Model[i].Phones.Count; j++)
                    {
                        @Html.HiddenFor(model => Model[i].Phones[j].Id)
                        @Html.HiddenFor(model => Model[i].Phones[j].PersonId)

                        <td class="input-group-sm">
                            @Html.TextBoxFor(modelItem => Model[i].Phones[j].Number, new { @class = "form-control" })
                            @Html.ValidationMessageFor(modelItem => Model[i].Phones[j].Number, "", new { @class = "text-danger" })
                        </td>
                        <td class="input-group-sm">
                            @Html.TextBoxFor(modelItem => Model[i].Phones[j].Type, new { @class = "form-control" })
                            @Html.ValidationMessageFor(modelItem => Model[i].Phones[j].Type, "", new { @class = "text-danger" })
                        </td>
                    }
                    <td class="form-horizontal">
                        <span class="label label-danger">
                            @Html.ActionLink("Delete", "Delete", new { id = Model[i].Id })
                        </span>
                    </td>
                </tr>
            }

        </table>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Save" class="btn-success btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
